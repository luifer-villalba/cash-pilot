# docker-compose.yml
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app
    working_dir: /app
    environment:
      - PYTHONPATH=/app/src
      - WATCHFILES_FORCE_POLLING=true
      - PYTHONDONTWRITEBYTECODE=1
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    command: >
      uvicorn cashpilot.main:create_app
      --factory
      --host 0.0.0.0
      --port 8000
      --reload
      --reload-dir /app/src
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .venv/
            - __pycache__/
            - .git/
            - .mypy_cache/
            - .ruff_cache/
            - node_modules/
            - dist/
            - build/
        - action: rebuild
          path: pyproject.toml

  db:
    image: postgres:16-alpine
    container_name: cashpilot_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-cashpilot}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password_change_in_prod}
      POSTGRES_DB: ${POSTGRES_DB:-cashpilot_dev}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-cashpilot}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
